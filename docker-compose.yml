version: '3'

services:
  base:
    image: ghcr.io/ecohealthalliance/repel-base
    build:
      context: .
      dockerfile: "Dockerfile.base"
      args:
        - GITHUB_PAT=${GITHUB_PAT}
    entrypoint: "bash -c"
    command: "exit 0"
    env_file: .env
  postgres:
    image: ghcr.io/ecohealthalliance/repel-postgres
    build:
      context: './postgres'
    environment:
      - IS_PROD=no
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./postgres/pgconf:/pgconf
    command: postgres -c config_file=/pgconf/postgresql.conf
    env_file: .env
    restart: on-failure
    networks:
      - promed-net
      - repel-servers
  cron:
    image: ghcr.io/ecohealthalliance/repel-cron
    build:
      context: './cron'
    links:
      - postgres:postgres
    env_file: .env
    restart: on-failure
    depends_on:
      - postgres
    networks:
      - repel-servers
  scraper:
    image: ghcr.io/ecohealthalliance/repel-scraper
    build:
      context: './scraper'
      args:
        - GITHUB_PAT=${GITHUB_PAT}
    env_file: .env
    environment:
      - IS_LOCAL=no
    links:
      - postgres:postgres
    restart: on-failure
    depends_on:
      - postgres
    volumes:
      - ./shiny/content:/var/www/html
    networks:
      - promed-net
      - repel-servers
  rshinyauth0:
    image: ghcr.io/ecohealthalliance/repel-rshinyauth0
    build:
      context: './rshinyauth0'
    restart: on-failure
    working_dir: /home/node/app
    env_file: .env
    environment:
      NODE_ENV: production
      IS_LOCAL: "no"
    networks:
      - repel-servers
  shinyserver:
    image: ghcr.io/ecohealthalliance/repel-shiny
    build:
      context: './shiny'
      args:
        - GITHUB_PAT=${GITHUB_PAT}
    restart: always
    env_file: .env
    volumes:
      - ./shiny/content:/srv/repel-shiny-server
    networks:
      - repel-servers
  nginx:
    image: linuxserver/swag
    restart: on-failure
    env_file: .env
    environment:
      EMAIL: young@ecohealthalliance.org
      URL: ${NGINX_URL}
    networks:
      - repel-servers
  plumber:
    image: ghcr.io/ecohealthalliance/repel-plumber
    build:
      context: './plumber'
    volumes:
      - ./plumber/plumber_cache:/plumber_cache
    restart: always
    depends_on:
      - postgres
    env_file: .env
    networks:
      - repel-servers
networks:
  repel-servers:
    driver: bridge
  promed-net:
    driver: bridge

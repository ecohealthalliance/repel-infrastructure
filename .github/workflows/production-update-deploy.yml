name: production-update-deploy

# automatic production deploy on update of production branch

on:
  push:
    branches:
      - production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Decrypt repository using symmetric key
        env:
          GIT_CRYPT_KEY64: ${{ secrets.GIT_CRYPT_KEY64 }}
        run: |
          sudo apt-get install git-crypt
          echo $GIT_CRYPT_KEY64 > git_crypt_key.key64 && base64 -d git_crypt_key.key64 > git_crypt_key.key && git-crypt unlock git_crypt_key.key
          rm git_crypt_key.key git_crypt_key.key64
      - name: add dotenv-action
        id: dotenv
        uses: ./.github/actions/dotenv-action
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ steps.dotenv.outputs.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ steps.dotenv.outputs.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Copy db backup from dev bucket to production bucket
        run: |
          aws s3 sync s3://repeldb s3://repeldb-prod --exclude "*repeldb-logs/*"
      - name: Pull and build containers
        run: |
          export $(egrep -v '^#' .env | xargs)
          echo $DOCKER_REGISTRY_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_USER --password-stdin
          docker-compose pull || true
          docker-compose build --progress plain
# uncomment this section when we move default branch to production
#      - name: Push the containers
#        run: |
#          export $(egrep -v '^#' .env | xargs)
#          echo $DOCKER_REGISTRY_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_USER --password-stdin
#          docker-compose push
      - name: restrict pem file permissions
        run: |
          chmod 400 ${{ steps.dotenv.outputs.PRODUCTION_PEM }}
      - name: remove containers from AWS instance
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible/remove-production.yml
          directory: ./
          inventory: |
            [repel-aws]
            ${{ steps.dotenv.outputs.PRODUCTION_SERVER_URL }} ansible_ssh_private_key_file=${{ steps.dotenv.outputs.PRODUCTION_PEM }} ansible_ssh_user=${{ steps.dotenv.outputs.PRODUCTION_SSH_USER }}
          options: |
            -v
      - name: Deploy containers to AWS instance
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible/deploy-production.yml
          directory: ./
          inventory: |
            [repel-aws]
            ${{ steps.dotenv.outputs.PRODUCTION_SERVER_URL }} ansible_ssh_private_key_file=${{ steps.dotenv.outputs.PRODUCTION_PEM }} ansible_ssh_user=${{ steps.dotenv.outputs.PRODUCTION_SSH_USER }}
          options: |
            -v
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

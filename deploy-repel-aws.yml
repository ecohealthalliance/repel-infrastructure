---
- hosts: repel-aws
  vars:
    base_docker_dir: "/root/docker"
  tasks:
    - name: install system packages
      apt:
        name:
          - python3-pip
          - python3-setuptools
          - python3-pexpect
          - unzip
        state: present
        update_cache: yes
    - name: add docker gpg apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add docker repo
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    - name: update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=present
    - name: install Docker module for Python
      pip:
        name:
          - docker
          - docker-compose
    - name: create directory
      file:
        path: "{{ base_docker_dir }}"
        state: directory
        owner: root
        group: root
        mode: 0775
    - name: copy service directories to host
      become: yes
      copy:
        src: "./{{ item }}"
        dest: "{{ base_docker_dir }}"
        owner: root
        group: root
        mode: 0755
      loop:
        - "cron"
        - "nginx"
        - "plumber"
        - "postgres"
        - "rshinyauth0"
        - "scraper"
        - "shiny"
    - name: copy docker files to host
      become: yes
      copy:
        src: "./{{ item }}"
        dest: "{{ base_docker_dir }}"
        owner: root
        group: root
        mode: 0755
      loop:
        - "docker-compose-local.yml"
        - "docker-compose-minlocal.yml"
        - "docker-compose-production.yml"
        - "docker-compose-production-aws.yml"
        - "docker-compose.yml"
        - "Dockerfile.base"
    - name: deploy docker-compose stack
      docker_compose:
        project_src: "{{ base_docker_dir }}"
        state: present
        debug: yes
        files:
          - docker-compose.yml
          - docker-compose-production-aws.yml
